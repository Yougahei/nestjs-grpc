syntax = "proto3";

package auth;

service UserService {
    rpc CreateUser (CreateUserDto) returns (User) {}
    rpc FindAllUsers (Empty) returns (Users) {} 
    rpc FindOneUser (FindOneUserDto) returns (User) {}
    rpc FindOneByEmail (FindOneByEmailDto) returns (User) {}
    rpc UpdateUser (UpdateUserDto) returns (User) {}
    rpc ReomveUser (FindOneUserDto) returns (Empty) {}
    rpc QueryUsers (stream PaginationDto) returns (stream Users) {}
}

service AuthService {
    rpc Register (RegisterRequest) returns (RegisterResponse) {}
    rpc Login (LoginRequest) returns (LoginResponse) {}
    rpc Validate (ValidateRequest) returns (ValidateResponse) {}
  }

  // Register

message RegisterRequest {
    string email = 1;
    string username = 2;
    string password = 3;
    int32 age = 4;
  }
  
message RegisterResponse {
    string accessToken = 1;
    string refreshToken = 2;
  }


  // Login

message LoginRequest {
    string email = 1;
    string password = 2;
  }
  
message LoginResponse {
    string accessToken = 1;
    string refreshToken = 2;
  }
  
// Validate

message ValidateRequest {
    string token = 1;
  }
  
message ValidateResponse {
    int32 status = 1;
    repeated string error = 2;
    string id = 3;
    string email = 4;
    string username = 5;
    string password = 6;
    int32 age = 7;
    bool subscribed = 8;
  }


message Empty {}

message PaginationDto {
    int32 page = 1;
    int32 limit = 2;
}

message UpdateUserDto {
    string id = 1;
    SoicalMedia soicalMedia = 2;
}

message FindOneUserDto {
    string id = 1;
}

message FindOneByEmailDto {
    string email = 1;
}

message Users {
    repeated User users = 1; 
}

message CreateUserDto {
    string username = 1;
    string email = 2;
    string password = 3; 
    int32 age = 4;
}

message User {
    string id = 1;
    string username = 2;
    string email = 3;
    string password = 4;
    int32 age = 5;
    bool subscribed = 6;

}

message SoicalMedia {
    optional string twitterUri = 1;
    optional string facebookUri = 2;

}

message Token {
    string accessToken = 1;
    string refreshToken = 2;
}